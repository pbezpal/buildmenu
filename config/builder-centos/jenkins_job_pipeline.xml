<?xml version="1.1" encoding="UTF-8"?><flow-definition plugin="workflow-job@2.39">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.7.0"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.7.0">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH</name>
          <description/>
          <defaultValue>master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VERSION</name>
          <description/>
          <defaultValue>0.0.0</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GIT_URL</name>
          <description/>
          <defaultValue>ssh://shavlovskiy_sn@10.10.199.35/opt/git/firelink/web_server</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_CMD</name>
          <description/>
          <defaultValue>make</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TYPE</name>
          <description/>
          <defaultValue>server</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>#!groovy

String BRANCH = "${params.BRANCH}"
String VERSION = "${params.VERSION}"
String BUILD_CMD = "${params.BUILD_CMD}"
String TYPE = "${params.TYPE}"
String GIT_URL = "${params.GIT_URL}"

def is_result_shell_build(command,text){
    if(currentBuild.result == 'SUCCESS'){
        try{
            sh command    
        }catch(err){
            error(text)
            currentBuild.result = 'ABORTED'
        }
    }
}

pipeline{
    agent {
        label 'centos'
    }
    options { timestamps () }
    stages{
      
      stage("Cleaning the build directory"){
        steps{
          deleteDir();
        }
      }
      stage("Cloning from a git repository"){
        steps{
          echo "========== Cloning GIT =========="
          script{
            try{
              git "$GIT_URL"
            }catch(err){
              currentBuild.result = "ABORTED"
              error("Error copying from git repository")
	          return;
            }
		    currentBuild.result = "SUCCESS"
          }
        }
      }
      stage("Build rpm"){
        steps{
          echo "========== Build ${JOB_NAME}_${VERSION}-${BUILD_NUMBER} =========="
          is_result_shell_build("$BUILD_CMD","The result of the assembly - failed")
        }
      }
      stage("Rsync rpm on ftp"){
        steps{
          echo "========== Rsync ${JOB_NAME}_${VERSION}-${BUILD_NUMBER} on ftp =========="
          script{
            is_result_shell_build("sshpass -p '34appterr21' rsync -r -e ssh ${WORKSPACE}/result/* jenkins@10.10.199.31:/ftp/releases/RosChat/${TYPE}/${JOB_NAME}/`date +'%d.%m.%Y_%H:%M'`_${VERSION}-${BUILD_NUMBER}/","Can't copy snmp on ftp")
          }
        }
      }
      stage("Rsync rpm for build and testing server"){
        steps{
          echo "========== Rsync ${JOB_NAME}_${VERSION}-${BUILD_NUMBER} on server =========="
          is_result_shell_build("ssh root@10.10.199.47 rm -f /tmp/rpms/${JOB_NAME}-*","Can't remove old version snmp")
          is_result_shell_build("rsync ${WORKSPACE}/result/* root@10.10.199.47:/tmp/rpms","Can't remove old version snmp")
          is_result_shell_build("echo ${JOB_NAME}_${VERSION}-${BUILD_NUMBER} &gt; /tmp/build","Can't remove old version snmp")
          is_result_shell_build("rsync /tmp/build root@10.10.199.47:/tmp","Can't remove old version snmp")
          is_result_shell_build("rm -f /tmp/build","Can't remove old version snmp")
        }
      }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <authToken>110afafd6a5bbe698b1e69a37390daaafd</authToken>
  <disabled>false</disabled>
</flow-definition>